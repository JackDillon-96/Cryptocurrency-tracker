{"version":3,"sources":["CoinData.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["CoinData","match","useState","cryptoCurrencyData","setCryptoCurrencyData","loading","setLoading","history","useHistory","useEffect","fetch","params","id","then","response","json","console","log","name","catch","err","finally","Button","onClick","goBack","style","backgroundColor","color","fontSize","variant","className","market_data","current_price","gbp","toLocaleString","price_change_percentage_24h","toFixed","high_24h","undefined","low_24h","market_cap_rank","price_change_percentage_1y_in_currency","total_supply","circulating_supply","Home","cryptoCurrencyName","setCryptoCurrencyName","search","setSearch","searchResult","filter","coin","toLowerCase","includes","toLocaleLowerCase","type","placeholder","onChange","event","target","value","map","src","image","price_change_24h","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAqHeA,MA/Gf,YAA+B,IAAVC,EAAS,EAATA,MAEnB,EAAoDC,mBAAS,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAUC,cAmBhB,OAjBAC,qBAAU,WACRH,GAAW,GACXI,MAAM,0CAAD,OAA2CT,EAAMU,OAAOC,KAC1DC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACV,GACLC,EAAsBD,GACtBa,QAAQC,IAAId,EAAmBe,SAEhCC,OAAM,SAACC,GACNJ,QAAQC,IAAIG,MAEbC,SAAQ,WACPf,GAAW,QAEd,IAGCD,EACK,2CAGH,gCACE,cAACiB,EAAA,EAAD,CAAQC,QAAShB,EAAQiB,OACvBC,MAAO,CACHC,gBAAiB,UACjBC,MAAO,QACPC,SAAU,QACTC,QAAQ,YALf,SAME,cAAC,IAAD,MAGJ,qBAAKC,UAAU,QAAf,SACI,6BAAK3B,EAAmBe,SAG1B,sBAAKY,UAAU,iBAAf,UAEA,sBAAKA,UAAU,gBAAf,UAEE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,OAAd,mBACA,qBAAIA,UAAU,OAAd,iBAAuB3B,EAAmB4B,YAAYC,cAAcC,IAAIC,eAAe,eAGzF,sBAAKJ,UAAU,yBAAf,UACE,oBAAIA,UAAU,OAAd,kCACA,qBAAKA,UAAU,OAAf,SACG3B,EAAmB4B,YAAYI,4BAA4BF,IAAM,EAC/D,qBAAIH,UAAU,iBAAd,UAAgC3B,EAAmB4B,YAAYI,4BAA4BC,QAAQ,GAAnG,OACA,qBAAIN,UAAU,iBAAd,UAAgC3B,EAAmB4B,YAAYI,4BAA4BC,QAAQ,GAAnG,YAKP,sBAAKN,UAAU,uBAAf,UACE,oBAAIA,UAAU,OAAd,0BACA,qBAAIA,UAAU,OAAd,iBAAuB3B,EAAmB4B,YAAYM,SAASJ,IAAIC,oBAAeI,EAC9E,CAAC,sBAAwB,EAAE,sBAAwB,UAGzD,sBAAKR,UAAU,sBAAf,UACE,oBAAIA,UAAU,OAAd,yBACA,qBAAIA,UAAU,OAAd,iBAAuB3B,EAAmB4B,YAAYQ,QAAQN,IAAIC,oBAAeI,EAC7E,CAAC,sBAAwB,EAAE,sBAAwB,aAI3D,sBAAKR,UAAU,gBAAf,UAEE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,OAAd,6BACA,oBAAIA,UAAU,OAAd,SAAsB3B,EAAmBqC,qBAG3C,sBAAKV,UAAU,uBAAf,UACE,oBAAIA,UAAU,OAAd,iCACA,qBAAKA,UAAU,OAAf,SACG3B,EAAmB4B,YAAYU,uCAAuCR,IAAM,EAC1E,qBAAIH,UAAU,iBAAd,UAAgC3B,EAAmB4B,YAAYU,uCAAuCR,IAAIG,QAAQ,GAAGF,eAAe,SAApI,OACA,qBAAIJ,UAAU,iBAAd,UAAgC3B,EAAmB4B,YAAYU,uCAAuCR,IAAIG,QAAQ,GAAGF,eAAe,SAApI,YAKP,sBAAKJ,UAAU,yBAAf,UACE,oBAAIA,UAAU,OAAd,0BACA,qBAAKA,UAAU,OAAf,SACkD,MAA/C3B,EAAmB4B,YAAYW,aAC7B,sCAAkB,6BAAKvC,EAAmB4B,YAAYW,aAAaR,eAAe,gBAKzF,sBAAKJ,UAAU,+BAAf,UACE,oBAAIA,UAAU,OAAd,gCACA,oBAAIA,UAAU,OAAd,SAAsB3B,EAAmB4B,YAAYY,mBAAmBT,eAAe,wBC3BtFU,MA5Ef,WAEE,MAAoD1C,mBAAS,IAA7D,mBAAO2C,EAAP,KAA2BC,EAA3B,KACA,EAA4B5C,mBAAS,IAArC,mBAAO6C,EAAP,KAAeC,EAAf,KAEA,EAA8B9C,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiBA,GAfAG,qBAAU,WACRH,GAAW,GACXI,MAAM,4HACHG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACgC,GACLC,EAAsBD,MAEvB1B,OAAM,SAACC,GACNJ,QAAQC,IAAIG,MAEbC,SAAQ,WACPf,GAAW,QAEd,IAECD,EACF,OAAO,2CAIT,IAAM4C,EAAeJ,EAAmBK,QAAO,SAAAC,GAAI,OACjDA,EAAKjC,KAAKkC,cAAcC,SAASN,EAAOO,wBAO1C,OACE,sBAAKxB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACC,0DAGD,qBAAKA,UAAU,iBAAf,SACE,+BACE,uBACEA,UAAU,aACVyB,KAAK,OACLC,YAAY,SACZC,SAhBW,SAACC,GACpBV,EAAUU,EAAMC,OAAOC,cAmBnB,8BACGX,EAAaY,KAAI,SAACV,GAAD,OAChB,sBAAKrB,UAAU,iBAAf,UACA,qBAAKA,UAAU,aAAagC,IAAKX,EAAKY,QACtC,oBAAIjC,UAAU,YAAd,SAA2BqB,EAAKjC,OAC7BiC,EAAKa,iBAAmB,EACtB,qBAAIlC,UAAU,iBAAd,iBAAiCqB,EAAKnB,cAAcE,oBAAeI,EAClE,CAAC,sBAAwB,EAAE,sBAAwB,OACpD,qBAAIR,UAAU,iBAAd,iBAAiCqB,EAAKnB,cAAcE,oBAAeI,EAClE,CAAC,sBAAwB,EAAE,sBAAwB,OAEzD,oBAAIR,UAAU,qBAAd,SACE,cAAC,IAAD,CAAMA,UAAU,OAAOmC,GAAE,gBAAad,EAAKvC,IAA3C,SAAiD,cAACU,EAAA,EAAD,CAAQG,MAAO,CAC1DC,gBAAiB,UACjBC,MAAO,QACPC,SAAU,QACXC,QAAQ,YAJoC,6BAVdsB,EAAKvC,aCxCvCsD,MAbf,WACE,OACE,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzB,IACjC,cAAC,IAAD,CAAOuB,KAAK,YAAYE,UAAWrE,YCC9BsE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.543bc048.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./CoinData.css\";\r\n\r\nfunction CoinData ({ match }) {\r\n\r\n  const [cryptoCurrencyData, setCryptoCurrencyData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(`https://api.coingecko.com/api/v3/coins/${match.params.id}`)\r\n      .then((response) => response.json())\r\n      .then((cryptoCurrencyData) => {\r\n        setCryptoCurrencyData(cryptoCurrencyData);\r\n        console.log(cryptoCurrencyData.name)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n    return (\r\n        <div>\r\n          <Button onClick={history.goBack}\r\n            style={{\r\n                backgroundColor: \"#24a0ed\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n              }} variant=\"contained\">\r\n            <AiOutlineHome />\r\n          </Button>\r\n\r\n        <div className=\"title\">\r\n            <h1>{cryptoCurrencyData.name}</h1>\r\n        </div>\r\n        \r\n          <div className=\"main-container\">\r\n    \r\n          <div className=\"row-container\">\r\n\r\n            <div className=\"price-container\">\r\n              <h1 className=\"text\">Price</h1>\r\n              <h1 className=\"data\">£{cryptoCurrencyData.market_data.current_price.gbp.toLocaleString(\"en-UK\")}</h1>\r\n            </div>\r\n\r\n            <div className=\"price-change-container\">\r\n              <h1 className=\"text\">24 hour price change</h1>\r\n              <div className=\"data\">\r\n                {cryptoCurrencyData.market_data.price_change_percentage_24h.gbp > 0 ?\r\n                  (<h1 className=\"price-increase\">{cryptoCurrencyData.market_data.price_change_percentage_24h.toFixed(2)}%</h1>) :\r\n                  (<h1 className=\"price-decrease\">{cryptoCurrencyData.market_data.price_change_percentage_24h.toFixed(2)}%</h1>)\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"high-price-container\">\r\n              <h1 className=\"text\">24 hour high</h1>\r\n              <h1 className=\"data\">£{cryptoCurrencyData.market_data.high_24h.gbp.toLocaleString(undefined,\r\n                  {'minimumFractionDigits':2,'maximumFractionDigits':2})}</h1>\r\n            </div>\r\n\r\n            <div className=\"low-price-container\">\r\n              <h1 className=\"text\">24 hour low</h1>\r\n              <h1 className=\"data\">£{cryptoCurrencyData.market_data.low_24h.gbp.toLocaleString(undefined,\r\n                  {'minimumFractionDigits':2,'maximumFractionDigits':2})}</h1>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row-container\">\r\n\r\n            <div className=\"market-cap-container\">\r\n              <h1 className=\"text\">Market cap rank</h1>\r\n              <h1 className=\"data\">{cryptoCurrencyData.market_cap_rank}</h1>\r\n            </div>\r\n\r\n            <div className=\"year-price-container\">\r\n              <h1 className=\"text\">1 year price change</h1>\r\n              <div className=\"data\">\r\n                {cryptoCurrencyData.market_data.price_change_percentage_1y_in_currency.gbp > 0 ?\r\n                  (<h1 className=\"price-increase\">{cryptoCurrencyData.market_data.price_change_percentage_1y_in_currency.gbp.toFixed(2).toLocaleString(\"en-UK\")}%</h1>) : \r\n                  (<h1 className=\"price-decrease\">{cryptoCurrencyData.market_data.price_change_percentage_1y_in_currency.gbp.toFixed(2).toLocaleString(\"en-UK\")}%</h1>)\r\n                }  \r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"total-supply-container\">\r\n              <h1 className=\"text\">Total supply</h1>\r\n              <div className=\"data\">\r\n                {cryptoCurrencyData.market_data.total_supply == null ? \r\n                  (<h1>null</h1>) : (<h1>{cryptoCurrencyData.market_data.total_supply.toLocaleString(\"en-UK\")}</h1>)\r\n                  }\r\n              </div> \r\n            </div> \r\n\r\n            <div className=\"circulating-supply-container\">\r\n              <h1 className=\"text\">Circulating supply</h1>\r\n              <h1 className=\"data\">{cryptoCurrencyData.market_data.circulating_supply.toLocaleString(\"en-UK\")}</h1>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default CoinData;\r\n\r\n\r\n\r\n ","import \"./App.css\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Home() {\r\n\r\n  const [cryptoCurrencyName, setCryptoCurrencyName] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=gbp&order=market_cap_desc&per_page=100&page=1&sparkline=false\")\r\n      .then((response) => response.json())\r\n      .then((cryptoCurrencyName) => {\r\n        setCryptoCurrencyName(cryptoCurrencyName);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n \r\n  const searchResult = cryptoCurrencyName.filter(coin => \r\n    coin.name.toLowerCase().includes(search.toLocaleLowerCase())\r\n    );\r\n     \r\n  const handleChange = (event) => {\r\n    setSearch(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"title\">\r\n       <h1>Cryptocurrency Tracker</h1>\r\n      </div>\r\n      \r\n      <div className=\"form-container\">\r\n        <form>\r\n          <input\r\n            className=\"search-btn\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={handleChange}\r\n          />\r\n        </form>\r\n      </div>\r\n        <div>\r\n          {searchResult.map((coin) => (\r\n            <div className=\"home-container\" key={coin.id}>\r\n            <img className=\"coin-image\" src={coin.image} />\r\n            <h1 className=\"coin-name\">{coin.name}</h1>\r\n              {coin.price_change_24h > 0 ?\r\n                (<h1 className=\"price-increase\">£{coin.current_price.toLocaleString(undefined,\r\n                  {'minimumFractionDigits':2,'maximumFractionDigits':2})}</h1>) :\r\n                (<h1 className=\"price-decrease\">£{coin.current_price.toLocaleString(undefined,\r\n                  {'minimumFractionDigits':2,'maximumFractionDigits':2})}</h1>)\r\n              }\r\n            <h1 className=\"coindata-container\">\r\n              <Link className=\"link\" to = {`/home/${coin.id}`}><Button style={{\r\n                    backgroundColor: \"#24a0ed\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\"\r\n                }} variant=\"contained\">Full Data</Button></Link>\r\n            </h1>\r\n          </div>\r\n          ))}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, useHistory } from \"react-router-dom\";\nimport CoinData from \"./CoinData\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <div>\n      <Router >\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/home/:id\" component={CoinData}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}